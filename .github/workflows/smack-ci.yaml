name: SMACK CI

on: [push, pull_request]

jobs:
  #check-regressions:
  #  runs-on: ubuntu-20.04
  #  strategy:
  #    matrix:
  #      travis_env:
  #        [
  #          "--exhaustive --folder=c/basic",
  #          "--exhaustive --folder=c/data",
  #          "--exhaustive --folder=c/ntdrivers-simplified",
  #          "--exhaustive --folder=c/ntdrivers",
  #          "--exhaustive --folder=c/bits",
  #          "--exhaustive --folder=c/float",
  #          "--exhaustive --folder=c/locks",
  #          "--exhaustive --folder=c/contracts",
  #          "--exhaustive --folder=c/simd",
  #          "--exhaustive --folder=c/memory-safety",
  #          "--exhaustive --folder=c/pthread",
  #          "--exhaustive --folder=c/pthread_extras",
  #          "--exhaustive --folder=c/strings",
  #          "--exhaustive --folder=c/special",
  #          "--exhaustive --folder=rust/array --languages=rust",
  #          "--exhaustive --folder=rust/basic --languages=rust",
  #          "--exhaustive --folder=rust/box --languages=rust",
  #          "--exhaustive --folder=rust/functions --languages=rust",
  #          "--exhaustive --folder=rust/generics --languages=rust",
  #          "--exhaustive --folder=rust/loops --languages=rust",
  #          "--exhaustive --folder=rust/panic --languages=rust",
  #          "--exhaustive --folder=rust/recursion --languages=rust",
  #          "--exhaustive --folder=rust/structures --languages=rust",
  #          "--exhaustive --folder=rust/vector --languages=rust",
  #          "--exhaustive --folder=rust/cargo/** --languages=cargo --threads=1",
  #          "--exhaustive --folder=llvm --languages=llvm-ir"
  #        ]
  #  steps:
  #    - uses: actions/checkout@v2

  #    - name: install dependencies
  #      env:
  #        GITHUB_ACTIONS: true
  #      run: INSTALL_DEV_DEPENDENCIES=1 INSTALL_RUST=1 ./bin/build.sh

  #    - name: format checking
  #      run: |
  #        ./format/run-clang-format.py -r lib/smack include/smack tools share/smack/include share/smack/lib test examples
  #        flake8 test/regtest.py share/smack/ --extend-exclude share/smack/svcomp/,share/smack/reach.py
  #    
  #    - name: compile and test
  #      env:
  #        TRAVIS_ENV: ${{ matrix.travis_env }}
  #      run: ./bin/build.sh
  check-regressions-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: install build/test dependencies
        run: |
          brew install ninja
          brew install boost
          sudo pip3 install yaml toml

      - name: install llvm
        run: |
          wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.0/clang+llvm-10.0.0-x86_64-apple-darwin.tar.xz
          tar -xf clang+llvm-10.0.0-x86_64-apple-darwin.tar.xz

      - name: install backends
        run: |
          brew install z3
          export BOOGIE_DIR="$PWD"/../smack-deps/boogie
          export CORRAL_DIR="$PWD"/../smack-deps/corral
          export BOOGIE_VERSION="2.8.26"
          export CORRAL_VERSION="1.0.17"
          export SMACKENV="$PWD"/../smack.environment
          dotnet tool install Boogie --tool-path ${BOOGIE_DIR} --version ${BOOGIE_VERSION}
          dotnet tool install Corral --tool-path ${CORRAL_DIR} --version ${CORRAL_VERSION}
          echo export PATH=\"${BOOGIE_DIR}:\$PATH\" >> ${SMACKENV}
          echo export PATH=\"${CORRAL_DIR}:\$PATH\" >> ${SMACKENV}

      - name: build
        run: |
          export PATH="$PWD"/clang+llvm-10.0.0-x86_64-apple-darwin/bin:$PATH
          clang --version
          git submodule init
          git submodule update
          mkdir -p "$PWD"/build
          cd "$PWD"/build
          cmake -DCMAKE_BUILD_TYPE=Debug .. -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          ninja
          sudo ninja install

      - name: test
        run: |
          export SMACKENV="$PWD"/../smack.environment
          source $SMACKENV
          cd test
          ./regtest.py
